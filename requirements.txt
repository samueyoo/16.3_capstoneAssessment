Follow TDD process
    First determine what you want your code to do, create tests
    that you code will need to pass to achieve that, then write the code
Use Mocha and Chai
Write code that passes all the tests in the Qualified assessment
Submit via a GitHub repo link
Write code that passes all the requirements:
    All tests are passing in Qualified 
    Caesar shift tests should test:
        - Returns false if shift value is = to 0, < -25, >25, or not present
        - Ignores capital letters
        - When encoding, handles shifts that go past the end of the alphabet
            e.g., shifting "z" to the right by 3 should cause "z" to wrap
            around to the front of the alphabet, so that "z" becomes "c"
        - Maintains spaces and other nonalphabetic symbols in the msg,
        before and after encoding or decoding
    Polybius square tests should test:
        - When encoding, translates letters "i" and "j" to 42
        - When decoding, translates 42 to "(i/j)"
        - Ignores capital letters
        - Maintains spaces in the msg, before and after encoding/decoding
    Substitution cipher tests should:
        - Return false if the given alphabet isn't exactly 26 chars long
        - Correctly translates the given phrases, based on the alphabet 
        given to the function
        - Returns false if there are any duplicate chars in the given alphabet
        - Maintains spaces in the msg, before and after encoding/decoding
        - Ignores capital letters